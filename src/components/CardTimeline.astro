---
interface Props {
	title: string;
	subtitle: string;
	body: string[];
	stackDev: any[];
	proyects: any[];
	colorTheme: string
}

const { title, subtitle, body, stackDev, proyects, colorTheme } = Astro.props;
---

<div class="card" style={{ backgroundColor: colorTheme }}>
	<h2>
		{title}
	</h2>
	<h2>
		{subtitle}
	</h2>
	<ul>
		{
			body.map(itemFunction => <li>{itemFunction}</li>)
		}
	</ul>
	<div class="stack">
		Stack development 
		{
			stackDev.map(imageStack => <img src={imageStack} width="24px"/>)
		}
	</div>
	<div class="projects">
		Proyectos
		{
			proyects.map(imageProject => <img src={imageProject} width="64px"/>)
		}
	</div>
</div>

<style>
	.card {
		padding: 15px 20px;
		border-radius: 25px;
		opacity: 0.8;
	}

	.stack {
		display: flex;
		gap: 10px;
		align-items: center;
	}

	.projects {
		display: flex;
		gap: 10px;
		align-items: center;
	}
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style>
